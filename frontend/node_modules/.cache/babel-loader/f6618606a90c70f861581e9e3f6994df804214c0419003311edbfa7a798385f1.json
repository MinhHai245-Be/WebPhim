{"ast":null,"code":"var _jsxFileName = \"C:\\\\NODEJS\\\\ASM1\\\\frontend\\\\src\\\\components\\\\browse\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\nconst base_url = 'https://image.tmdb.org/t/p/original';\nconst movies_limit = 10;\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/movies/${fetchUrl}`, {\n      params: {\n        \"userId\": \"User 01\",\n        \"token\": \"8qlOkxz4wq\"\n      }\n    }).then(response => {\n      // Xử lý khi yêu cầu thành công\n      const movie = response.data.results;\n      setMovies(movie);\n    }).catch(error => {\n      // Xử lý khi yêu cầu thất bại\n      console.error('There was an error sending the data!', error);\n    });\n  }, [fetchUrl]);\n  const handleClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n    } else {\n      setSelectedMovie(movie);\n    }\n  };\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && 'row_posterLarge'}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  })));\n}\n_s(MovieList, \"PO+XgOji7E32nFJj3H5UPLPJ7w4=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","_s","movies","setMovies","selectedMovie","setSelectedMovie","get","params","then","response","movie","data","results","catch","error","console","handleClick","id","sort","a","b","popularity","splice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","onClick","src","poster_path","backdrop_path","alt","name","style","padding","movieData","_c","$RefreshReg$"],"sources":["C:/NODEJS/ASM1/frontend/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\nconst movies_limit = 10;\n\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n\tconst [movies, setMovies] = useState([]);\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\n  \n\tuseEffect(() => {\n\t\taxios.get(`http://localhost:5000/api/movies/${fetchUrl}`, {\n\t\t\tparams: {\n\t\t\t\t\"userId\": \"User 01\",\n\t\t\t\t\"token\": \"8qlOkxz4wq\"\n\t\t\t},\n\t\t})\n    .then(response => {\n      // Xử lý khi yêu cầu thành công\n      const movie = response.data.results;\n\t  setMovies(movie)\n    })\n    .catch(error => {\n      // Xử lý khi yêu cầu thất bại\n      console.error('There was an error sending the data!', error);\n    });\n\n\t}, [fetchUrl]);\n\tconst handleClick = (movie) => {\n\t\tif (selectedMovie && selectedMovie.id === movie.id) {\n\t\t\tsetSelectedMovie(null);\n\t\t} else {\n\t\t\tsetSelectedMovie(movie);\n\t\t}\n\t};\n\n\tmovies.sort((a, b) => b.popularity - a.popularity);\n\tmovies.splice(movies_limit);\n\n\treturn (\n\t\t<div className='row'>\n\t\t\t<h2 className=\"movie-list-title\">{title}</h2>\n\t\t\t<div className='row_posters sc2'>\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\tonClick={() => handleClick(movie)}\n\t\t\t\t\t\t\tclassName={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n\t\t\t\t\t\t\tsrc={`${base_url}${\n\t\t\t\t\t\t\t\tisLargeRow ? movie.poster_path : movie.backdrop_path\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div style={{ padding: '40px' }}>\n\t\t\t\t{selectedMovie && <MovieDetail movieData={selectedMovie} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MovieList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAO,iBAAiB;AAExB,MAAMC,QAAQ,GAAG,qCAAqC;AACtD,MAAMC,YAAY,GAAG,EAAE;AAGvB,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACfC,KAAK,CAACc,GAAG,CAAC,oCAAoCP,QAAQ,EAAE,EAAE;MACzDQ,MAAM,EAAE;QACP,QAAQ,EAAE,SAAS;QACnB,OAAO,EAAE;MACV;IACD,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,OAAO;MACtCT,SAAS,CAACO,KAAK,CAAC;IACf,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D,CAAC,CAAC;EAEL,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EACd,MAAMiB,WAAW,GAAIN,KAAK,IAAK;IAC9B,IAAIN,aAAa,IAAIA,aAAa,CAACa,EAAE,KAAKP,KAAK,CAACO,EAAE,EAAE;MACnDZ,gBAAgB,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACNA,gBAAgB,CAACK,KAAK,CAAC;IACxB;EACD,CAAC;EAEDR,MAAM,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,UAAU,GAAGF,CAAC,CAACE,UAAU,CAAC;EAClDnB,MAAM,CAACoB,MAAM,CAAC1B,YAAY,CAAC;EAE3B,oBACCP,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBzC,KAAA,CAAAkC,aAAA;IAAIC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEhC,KAAU,CAAC,eAC7CT,KAAA,CAAAkC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9B5B,MAAM,CAAC6B,GAAG,CAAErB,KAAK,IAAK;IACtB,oBACCrB,KAAA,CAAAkC,aAAA;MACCS,GAAG,EAAEtB,KAAK,CAACO,EAAG;MACdgB,OAAO,EAAEA,CAAA,KAAMjB,WAAW,CAACN,KAAK,CAAE;MAClCc,SAAS,EAAE,cAAcxB,UAAU,IAAI,iBAAiB,EAAG;MAC3DkC,GAAG,EAAE,GAAGvC,QAAQ,GACfK,UAAU,GAAGU,KAAK,CAACyB,WAAW,GAAGzB,KAAK,CAAC0B,aAAa,EAClD;MACHC,GAAG,EAAE3B,KAAK,CAAC4B,IAAK;MAAAb,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAChB,CAAC;EAEJ,CAAC,CACG,CAAC,eACNzC,KAAA,CAAAkC,aAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9B1B,aAAa,iBAAIf,KAAA,CAAAkC,aAAA,CAAC7B,WAAW;IAAC+C,SAAS,EAAErC,aAAc;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACtD,CACD,CAAC;AAER;AAAC7B,EAAA,CAxDQJ,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AA0DlB,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}